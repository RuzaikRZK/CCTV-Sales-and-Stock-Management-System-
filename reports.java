/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kontrinex_solutions;

import java.awt.Color;
import java.text.NumberFormat;
import java.util.Locale;
import javax.swing.JOptionPane;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.labels.StandardCategoryToolTipGenerator;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.data.jdbc.JDBCCategoryDataset;
import org.jfree.data.jdbc.JDBCPieDataset;

/**
 
 * Subject - Social and Professional Project Management
 * Code Developed By Developer 1 -Ruzaik Mohomad
 * Student Number - 1821173
 * Group - 1
 */
public class reports extends javax.swing.JPanel {

    /**
     * Creates new form dashboard
     */
    public reports() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btn_barchart = new javax.swing.JButton();
        btn_linechart = new javax.swing.JButton();
        btn_piechart = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        btn_barchart1 = new javax.swing.JButton();
        btn_linechart1 = new javax.swing.JButton();
        btn_piechart1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        btn_barchart2 = new javax.swing.JButton();
        btn_linechart2 = new javax.swing.JButton();
        btn_piechart2 = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(255, 204, 204), null, null));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Top Sales");

        btn_barchart.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/flat_business16-512.png"))); // NOI18N
        btn_barchart.setText("  Bar Chart");
        btn_barchart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_barchartActionPerformed(evt);
            }
        });

        btn_linechart.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/line-chart-icon-12.png"))); // NOI18N
        btn_linechart.setText("  Line Chart");
        btn_linechart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_linechartActionPerformed(evt);
            }
        });

        btn_piechart.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/pie-chart-1430973-1208737.png"))); // NOI18N
        btn_piechart.setText("  Pie Chart");
        btn_piechart.setActionCommand("Pie Chart");
        btn_piechart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_piechartActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setText("Stocks Quantity");

        btn_barchart1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/flat_business16-512.png"))); // NOI18N
        btn_barchart1.setText("  Bar Chart");
        btn_barchart1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_barchart1ActionPerformed(evt);
            }
        });

        btn_linechart1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/line-chart-icon-12.png"))); // NOI18N
        btn_linechart1.setText("  Line Chart");
        btn_linechart1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_linechart1ActionPerformed(evt);
            }
        });

        btn_piechart1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/pie-chart-1430973-1208737.png"))); // NOI18N
        btn_piechart1.setText("  Pie Chart");
        btn_piechart1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_piechart1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel3.setText("Average Sold Items");

        btn_barchart2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/flat_business16-512.png"))); // NOI18N
        btn_barchart2.setText("  Bar Chart");
        btn_barchart2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_barchart2ActionPerformed(evt);
            }
        });

        btn_linechart2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/line-chart-icon-12.png"))); // NOI18N
        btn_linechart2.setText("  Line Chart");
        btn_linechart2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_linechart2ActionPerformed(evt);
            }
        });

        btn_piechart2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/pie-chart-1430973-1208737.png"))); // NOI18N
        btn_piechart2.setText("  Pie Chart");
        btn_piechart2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_piechart2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btn_barchart2, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btn_linechart2, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btn_barchart1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btn_linechart1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel2)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(btn_barchart, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(89, 89, 89)
                                    .addComponent(btn_linechart, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(103, 103, 103)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btn_piechart, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_piechart1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_piechart2, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(346, 346, 346)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(289, 289, 289)
                        .addComponent(jLabel3)))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_barchart, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_linechart, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_piechart, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(57, 57, 57)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_barchart1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_linechart1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_piechart1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(57, 57, 57)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_barchart2, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_linechart2, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_piechart2, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(73, 73, 73))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btn_barchartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_barchartActionPerformed
        // TODO add your handling code here:
        try{
            String query = "select item_name, sum(quantity) as 'Quantity Sold' from cart group by item_name";
            final JDBCCategoryDataset dataset = new JDBCCategoryDataset(database.getConnection(),query); 
            JFreeChart chart = ChartFactory.createBarChart("Top Sales", "Product Type", "Quantity Sold", dataset, PlotOrientation.VERTICAL, false, true, true);
            BarRenderer renderer = (BarRenderer)chart.getCategoryPlot().getRenderer();
	    renderer.setSeriesPaint(0, new Color(0, 102, 51));
	    renderer.setBaseToolTipGenerator(new StandardCategoryToolTipGenerator("{1}={2}", NumberFormat.getInstance()));
            ChartFrame frame = new ChartFrame("Top Sales - Bar Chart",chart);
	    frame.setVisible(true);
	    frame.setSize(640, 480);
            
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_btn_barchartActionPerformed

    private void btn_linechartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_linechartActionPerformed
        // TODO add your handling code here:
        try{
            String query = "select item_name, sum(quantity) as 'Quantity Sold' from cart group by item_name";
            final JDBCCategoryDataset dataset = new JDBCCategoryDataset(database.getConnection(),query); 
            JFreeChart chart = ChartFactory.createLineChart("Top Sales", "Product Type", "Quantity", dataset, PlotOrientation.VERTICAL, true, true, true);
            LineAndShapeRenderer renderer = (LineAndShapeRenderer)chart.getCategoryPlot().getRenderer();
	    renderer.setSeriesPaint(0, new Color(0, 0, 0));
	    renderer.setBaseToolTipGenerator(new StandardCategoryToolTipGenerator("{1}", NumberFormat.getInstance()));
            ChartFrame frame = new ChartFrame("Top Sales - Line Chart",chart);
	    frame.setVisible(true);
	    frame.setSize(640, 480);
            
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_btn_linechartActionPerformed

    private void btn_piechartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_piechartActionPerformed
        // TODO add your handling code here:
         try{
            String query = "select item_name, sum(quantity) as 'Quantity Sold' from cart group by item_name";
            final JDBCPieDataset dataset = new JDBCPieDataset(database.getConnection(),query); 
            JFreeChart chart = ChartFactory.createPieChart("Top Sales", dataset, true, true, Locale.ITALY);
            
            ChartFrame frame = new ChartFrame("Top Sales - Pie Chart",chart);
	    frame.setVisible(true);
	    frame.setSize(640, 480);
            
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_btn_piechartActionPerformed

    private void btn_barchart1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_barchart1ActionPerformed
        // TODO add your handling code here:
        try{
            String query = "select item_name, quantity as 'Quantity Available' from item WHERE quantity < 10 group by item_name";
            final JDBCCategoryDataset dataset = new JDBCCategoryDataset(database.getConnection(),query); 
            JFreeChart chart = ChartFactory.createBarChart("Stocks Quantity", "Item Name", "Quantity Available", dataset, PlotOrientation.VERTICAL, false, true, true);
            BarRenderer renderer = (BarRenderer)chart.getCategoryPlot().getRenderer();
	    renderer.setSeriesPaint(0, new Color(0, 102, 51));
	    renderer.setBaseToolTipGenerator(new StandardCategoryToolTipGenerator("{1}={2}", NumberFormat.getInstance()));
            ChartFrame frame = new ChartFrame("Stocks Quantity - Bar Chart",chart);
	    frame.setVisible(true);
	    frame.setSize(640, 480);
            
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_btn_barchart1ActionPerformed

    private void btn_linechart1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_linechart1ActionPerformed
        // TODO add your handling code here:
        try{
            String query = "select item_name, quantity as 'Quantity Available' from item WHERE quantity < 10 group by item_name";
            final JDBCCategoryDataset dataset = new JDBCCategoryDataset(database.getConnection(),query); 
            JFreeChart chart = ChartFactory.createLineChart("Stocks Quantity", "Item Name", "Quantity Available", dataset, PlotOrientation.VERTICAL, true, true, true);
            LineAndShapeRenderer renderer = (LineAndShapeRenderer)chart.getCategoryPlot().getRenderer();
	    renderer.setSeriesPaint(0, new Color(0, 0, 0));
	    renderer.setBaseToolTipGenerator(new StandardCategoryToolTipGenerator("{1}", NumberFormat.getInstance()));
            ChartFrame frame = new ChartFrame("Stocks Quantity - Line Chart",chart);
	    frame.setVisible(true);
	    frame.setSize(640, 480);
            
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_btn_linechart1ActionPerformed

    private void btn_piechart1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_piechart1ActionPerformed
        // TODO add your handling code here:
        try{
            String query = "select item_name, quantity as 'Quantity Available' from item WHERE quantity < 10 group by item_name";
            final JDBCPieDataset dataset = new JDBCPieDataset(database.getConnection(),query); 
            JFreeChart chart = ChartFactory.createPieChart("Stocks Quantity", dataset, true, true, Locale.ITALY);
            
            ChartFrame frame = new ChartFrame("Stocks Quantity - Pie Chart",chart);
	    frame.setVisible(true);
	    frame.setSize(640, 480);
            
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_btn_piechart1ActionPerformed

    private void btn_barchart2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_barchart2ActionPerformed
        // TODO add your handling code here:
        try{
            String query = "select item_name, AVG(quantity) as 'Quantity Sold' from cart group by item_name";
            final JDBCCategoryDataset dataset = new JDBCCategoryDataset(database.getConnection(),query); 
            JFreeChart chart = ChartFactory.createBarChart("Average Sold Items", "Item Name", "Quantity Sold", dataset, PlotOrientation.VERTICAL, false, true, true);
            BarRenderer renderer = (BarRenderer)chart.getCategoryPlot().getRenderer();
	    renderer.setSeriesPaint(0, new Color(0, 102, 51));
	    renderer.setBaseToolTipGenerator(new StandardCategoryToolTipGenerator("{1}={2}", NumberFormat.getInstance()));
            ChartFrame frame = new ChartFrame("Average Sold Items - Bar Chart",chart);
	    frame.setVisible(true);
	    frame.setSize(640, 480);
            
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_btn_barchart2ActionPerformed

    private void btn_linechart2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_linechart2ActionPerformed
        // TODO add your handling code here:
        try{
            String query = "select item_name, AVG(quantity) as 'Quantity Sold' from cart group by item_name";
            final JDBCCategoryDataset dataset = new JDBCCategoryDataset(database.getConnection(),query); 
            JFreeChart chart = ChartFactory.createLineChart("Average Sold Items", "Item Name", "Quantity Sold", dataset, PlotOrientation.VERTICAL, true, true, true);
            LineAndShapeRenderer renderer = (LineAndShapeRenderer)chart.getCategoryPlot().getRenderer();
	    renderer.setSeriesPaint(0, new Color(0, 0, 0));
	    renderer.setBaseToolTipGenerator(new StandardCategoryToolTipGenerator("{1}", NumberFormat.getInstance()));
            ChartFrame frame = new ChartFrame("Average Sold Items - Line Chart",chart);
	    frame.setVisible(true);
	    frame.setSize(640, 480);
            
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_btn_linechart2ActionPerformed

    private void btn_piechart2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_piechart2ActionPerformed
        // TODO add your handling code here:
        try{
            String query = "select item_name, AVG(quantity) as 'Quantity Sold' from cart group by item_name";
            final JDBCPieDataset dataset = new JDBCPieDataset(database.getConnection(),query); 
            JFreeChart chart = ChartFactory.createPieChart("Average Sold Items", dataset, true, true, Locale.ITALY);
            
            ChartFrame frame = new ChartFrame("Average Sold Items - Pie Chart",chart);
	    frame.setVisible(true);
	    frame.setSize(640, 480);
            
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_btn_piechart2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_barchart;
    private javax.swing.JButton btn_barchart1;
    private javax.swing.JButton btn_barchart2;
    private javax.swing.JButton btn_linechart;
    private javax.swing.JButton btn_linechart1;
    private javax.swing.JButton btn_linechart2;
    private javax.swing.JButton btn_piechart;
    private javax.swing.JButton btn_piechart1;
    private javax.swing.JButton btn_piechart2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables
}
