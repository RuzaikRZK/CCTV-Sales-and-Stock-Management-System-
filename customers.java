/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kontrinex_solutions;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import static kontrinex_solutions.database.con;
import net.proteanit.sql.DbUtils;

/**
 
 * Subject - Social and Professional Project Management
 * Code Developed By Developer 1 -Ruzaik Mohomad
 * Student Number - 1821173
 * Group - 1
 */
public class customers extends javax.swing.JPanel {

Connection conn = null;
PreparedStatement pst = null;
ResultSet rs = null;

    /**
     * Creates new form dashboard
     */
    public customers() {
    try {
        initComponents();
        fetch();
        txt_cusid.setVisible(false);
        conn = database.getConnection();
        
        
        
    } catch (Exception ex) {
        Logger.getLogger(customers.class.getName()).log(Level.SEVERE, null, ex);
    }
    }
    
    private void fetch(){
        
        try{
            String q = "select cus_id as 'Customer ID', cus_name as 'Customer Name', nic as 'National ID', dob as 'Date of Birth', phone_num as 'Phone Number', home_address as 'Home Address' from customer";
            pst=con.prepareStatement(q);
            rs = pst.executeQuery();
            
            tbl_customerdetails.setModel(DbUtils.resultSetToTableModel(rs));
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(null, e);
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbl_customername = new javax.swing.JLabel();
        lbl_dateofbirth = new javax.swing.JLabel();
        lbl_nationalid = new javax.swing.JLabel();
        lbl_phonenumber = new javax.swing.JLabel();
        lbl_homeaddress = new javax.swing.JLabel();
        txt_customername = new javax.swing.JTextField();
        txt_nationalid = new javax.swing.JTextField();
        txt_phonenumber = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt_address = new javax.swing.JTextPane();
        txt_dateofbirth = new com.toedter.calendar.JDateChooser();
        txt_search = new javax.swing.JTextField();
        btn_addcustomer = new javax.swing.JButton();
        btn_modifycustomer = new javax.swing.JButton();
        btn_deletecustomer = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_customerdetails = new javax.swing.JTable();
        lbl_search = new javax.swing.JLabel();
        txt_cusid = new javax.swing.JTextField();

        setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(255, 204, 204), null, null));

        lbl_customername.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbl_customername.setText("Customer Name");

        lbl_dateofbirth.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbl_dateofbirth.setText("Date of Birth");

        lbl_nationalid.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbl_nationalid.setText("National ID");

        lbl_phonenumber.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbl_phonenumber.setText("Phone Number");

        lbl_homeaddress.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbl_homeaddress.setText("Home Address");

        jScrollPane1.setViewportView(txt_address);

        txt_dateofbirth.setDateFormatString("yyyy-MM-dd");

        txt_search.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txt_search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_searchKeyReleased(evt);
            }
        });

        btn_addcustomer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Add_item_positive-512.png"))); // NOI18N
        btn_addcustomer.setText("      Add Customer");
        btn_addcustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addcustomerActionPerformed(evt);
            }
        });

        btn_modifycustomer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/ic_refresh_48px-512.png"))); // NOI18N
        btn_modifycustomer.setText("  Modify Customer");
        btn_modifycustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_modifycustomerActionPerformed(evt);
            }
        });

        btn_deletecustomer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/close-128.png"))); // NOI18N
        btn_deletecustomer.setText("  Delete Customer");
        btn_deletecustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deletecustomerActionPerformed(evt);
            }
        });

        tbl_customerdetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Customer ID", "Customer Name", "Date of Birth", "Phone Number", "Home Address"
            }
        ));
        tbl_customerdetails.setFocusable(false);
        tbl_customerdetails.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_customerdetailsMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbl_customerdetails);

        lbl_search.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbl_search.setText("Search");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_phonenumber)
                            .addComponent(lbl_homeaddress))
                        .addGap(62, 62, 62)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_phonenumber)
                            .addComponent(jScrollPane1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_customername)
                            .addComponent(lbl_nationalid)
                            .addComponent(lbl_dateofbirth))
                        .addGap(55, 55, 55)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_nationalid)
                            .addComponent(txt_customername)
                            .addComponent(txt_dateofbirth, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(106, 106, 106)
                        .addComponent(lbl_search))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(txt_cusid, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(btn_modifycustomer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_deletecustomer, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE))
                    .addComponent(txt_search, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_addcustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47))
            .addComponent(jScrollPane2)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_customername)
                            .addComponent(txt_customername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_nationalid)
                            .addComponent(txt_nationalid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_cusid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_dateofbirth)
                            .addComponent(txt_dateofbirth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_phonenumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_phonenumber))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_homeaddress)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txt_search, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbl_search)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(64, 64, 64)
                                .addComponent(btn_addcustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(btn_modifycustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_deletecustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        lbl_customername.getAccessibleContext().setAccessibleName("lbl_customername");
        lbl_dateofbirth.getAccessibleContext().setAccessibleName("lbl_dob");
        lbl_phonenumber.getAccessibleContext().setAccessibleName("lbl_phonenumber");
        lbl_homeaddress.getAccessibleContext().setAccessibleName("lbl_address");
        txt_customername.getAccessibleContext().setAccessibleName("txt_customername");
    }// </editor-fold>//GEN-END:initComponents

    
    private void btn_addcustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addcustomerActionPerformed
        // TODO add your handling code here:   
    try {
        if(txt_customername.getText().isEmpty() || txt_nationalid.getText().isEmpty() || ((JTextField)txt_dateofbirth.getDateEditor().getUiComponent()).getText().isEmpty() || txt_phonenumber.getText().isEmpty() || txt_address.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Please enter all fields!");
        }
        else{
        String query = "insert into customer (cus_name, nic, dob, phone_num, home_address) values (?, ?, ?, ?, ?)";
        pst = conn.prepareStatement(query);
        pst.setString(1, txt_customername.getText());
        pst.setString(2, txt_nationalid.getText());
        pst.setString(3, ((JTextField)txt_dateofbirth.getDateEditor().getUiComponent()).getText());
        pst.setString(4, txt_phonenumber.getText());
        pst.setString(5, txt_address.getText());
        pst.execute();
        JOptionPane.showMessageDialog(null, "Customer Record has been Successfully Inserted!");
        fetch();
        txt_customername.setText(null);
        txt_nationalid.setText(null);
        txt_dateofbirth.setDate(null);
        txt_phonenumber.setText(null);
        txt_address.setText(null);
        }
    } catch (SQLException ex) {
        Logger.getLogger(customers.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_btn_addcustomerActionPerformed

    private void txt_searchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_searchKeyReleased
        // TODO add your handling code here:
        String custsearch = txt_search.getText();
        
        try{
            String query = "SELECT cus_id as 'Customer ID', cus_name as 'Customer Name', nic as 'National ID', dob as 'Date of Birth', phone_num as 'Phone Number', home_address as 'Home Address' FROM customer WHERE nic LIKE '%"+ custsearch + "%'";
            pst=conn.prepareStatement(query);
            rs=pst.executeQuery();
            tbl_customerdetails.setModel(DbUtils.resultSetToTableModel(rs));
            
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_txt_searchKeyReleased

    private void tbl_customerdetailsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_customerdetailsMouseClicked
        // TODO add your handling code here:
        
        DefaultTableModel model = (DefaultTableModel)tbl_customerdetails.getModel();
        int selectedRowIndex = tbl_customerdetails.getSelectedRow();
    try {
            java.util.Date date = new SimpleDateFormat("yyyy-MM-dd").parse((String)model.getValueAt(selectedRowIndex, 3));
        txt_dateofbirth.setDate(date);
    } catch (ParseException ex) {
        Logger.getLogger(customers.class.getName()).log(Level.SEVERE, null, ex);
    }
        txt_cusid.setText((model.getValueAt(selectedRowIndex, 0).toString()));
        txt_customername.setText((model.getValueAt(selectedRowIndex, 1).toString()));
        txt_nationalid.setText((model.getValueAt(selectedRowIndex, 2).toString()));
       // txt_dateofbirth.setDateFormatString((model.getValueAt(selectedRowIndex, 3).toString()));
        txt_phonenumber.setText((model.getValueAt(selectedRowIndex, 4).toString()));
        txt_address.setText((model.getValueAt(selectedRowIndex, 5).toString()));
        btn_addcustomer.setEnabled(false);
    }//GEN-LAST:event_tbl_customerdetailsMouseClicked

    private void btn_modifycustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_modifycustomerActionPerformed
        // TODO add your handling code here:
        
    try {
        if(txt_customername.getText().isEmpty() || txt_nationalid.getText().isEmpty() || ((JTextField)txt_dateofbirth.getDateEditor().getUiComponent()).getText().isEmpty() || txt_phonenumber.getText().isEmpty() || txt_address.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Please enter all fields!");
        }
        else{
        String query = "UPDATE customer SET cus_name=?, nic=?, dob=?, phone_num=?, home_address=? WHERE cus_id=? ";
        pst = conn.prepareStatement(query);
        pst.setString(1, txt_customername.getText());
        pst.setString(2, txt_nationalid.getText());
        pst.setString(3, ((JTextField)txt_dateofbirth.getDateEditor().getUiComponent()).getText());
        pst.setString(4, txt_phonenumber.getText());
        pst.setString(5, txt_address.getText());
        pst.setString(6, txt_cusid.getText());
        pst.executeUpdate();
        JOptionPane.showMessageDialog(null, "Customer Record has been Successfully Updated!");
        fetch();
        txt_customername.setText(null);
        txt_nationalid.setText(null);
        txt_dateofbirth.setDate(null);
        txt_phonenumber.setText(null);
        txt_address.setText(null);
        btn_addcustomer.setEnabled(true);
        }
    } catch (SQLException ex) {
        Logger.getLogger(customers.class.getName()).log(Level.SEVERE, null, ex);
    }
        
    }//GEN-LAST:event_btn_modifycustomerActionPerformed

    private void btn_deletecustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deletecustomerActionPerformed
        // TODO add your handling code here:
        try{
            if(txt_customername.getText().isEmpty() || txt_nationalid.getText().isEmpty() || ((JTextField)txt_dateofbirth.getDateEditor().getUiComponent()).getText().isEmpty() || txt_phonenumber.getText().isEmpty() || txt_address.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Please enter all fields!");
        }
        else{
            String query = "DELETE FROM customer WHERE cus_id=? ";
            pst=conn.prepareStatement(query);
            pst.setString(1, txt_cusid.getText());
            pst.execute();
            JOptionPane.showMessageDialog(null, "Customer Record has been Successfully Deleted!");
            fetch();
            txt_customername.setText(null);
            txt_nationalid.setText(null);
            txt_dateofbirth.setDate(null);
            txt_phonenumber.setText(null);
            txt_address.setText(null);
            btn_addcustomer.setEnabled(true);
            }
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_btn_deletecustomerActionPerformed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_addcustomer;
    private javax.swing.JButton btn_deletecustomer;
    private javax.swing.JButton btn_modifycustomer;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbl_customername;
    private javax.swing.JLabel lbl_dateofbirth;
    private javax.swing.JLabel lbl_homeaddress;
    private javax.swing.JLabel lbl_nationalid;
    private javax.swing.JLabel lbl_phonenumber;
    private javax.swing.JLabel lbl_search;
    private javax.swing.JTable tbl_customerdetails;
    private javax.swing.JTextPane txt_address;
    private javax.swing.JTextField txt_cusid;
    private javax.swing.JTextField txt_customername;
    private com.toedter.calendar.JDateChooser txt_dateofbirth;
    private javax.swing.JTextField txt_nationalid;
    private javax.swing.JTextField txt_phonenumber;
    private javax.swing.JTextField txt_search;
    // End of variables declaration//GEN-END:variables

    private PreparedStatement setString(int i, String valueOf) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
